import * as process from 'process';

export const configuration = () => ({
  NODE_ENV: process.env.NODE_ENV,
  port: parseInt(process.env.APP_PORT, 10) || 5001,
  portCron: parseInt(process.env.APP_PORT_CRON, 10) || 4001,
  portWorker: parseInt(process.env.APP_PORT_WORKER, 10) || 3001,
  appName: process.env.APP_NAME,
  appNameReportWorker: process.env.APP_NAME_REPORT_WORKER,
  appNameDataRawWorker: process.env.APP_NAME_DATA_RAW_WORKER,
  appNameDataRawCron: process.env.APP_NAME_DATA_RAW_CRON,
  databaseUrl: process.env.DATABASE_URL,
  jwtSecret: process.env.JWT_SECRET,
  jwtExpirationTime: process.env.JWT_EXPIRATION_TIME,
  jwtRefreshTokenSecret: process.env.JWT_REFRESH_TOKEN_SECRET,
  jwtRefreshTokenExpiration: process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME,
  smsUrl: process.env.BEELINE_URL,
  loginSms: process.env.BEELINE_LOGIN,
  passwordSms: process.env.BEELINE_PSWD,
  senderSms: process.env.BEELINE_SENDER,
  emailUrl: process.env.EMAIL_URL,
  emailApiKey: process.env.EMAIL_API_KEY,
  emailName: process.env.EMAIL_NAME,
  emailFrom: process.env.EMAIL_FROM,
  bucketName: process.env.BUCKET_NAME,
  endpointFile: process.env.ENDPOINT_FILE,
  storageUrl: process.env.STORAGE_URL,
  tz: process.env.TZ,
  apiExpirationTime: process.env.API_EXPIRATION_TIME,
  redisHost: process.env.REDIS_HOST,
  redisPort: process.env.REDIS_PORT,
});
